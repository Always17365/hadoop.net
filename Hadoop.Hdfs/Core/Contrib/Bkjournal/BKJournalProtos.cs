// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bkjournal.proto
using System;
using System.IO;
using Com.Google.Protobuf;
using Org.Apache.Hadoop.Hdfs.Protocol.Proto;
using Sharpen;

namespace Org.Apache.Hadoop.Contrib.Bkjournal
{
	public sealed class BKJournalProtos
	{
		private BKJournalProtos()
		{
		}

		public static void RegisterAllExtensions(ExtensionRegistry registry)
		{
		}

		public interface VersionProtoOrBuilder : MessageOrBuilder
		{
			// required int32 layoutVersion = 1;
			/// <summary><code>required int32 layoutVersion = 1;</code></summary>
			bool HasLayoutVersion();

			/// <summary><code>required int32 layoutVersion = 1;</code></summary>
			int GetLayoutVersion();

			// optional .hadoop.hdfs.NamespaceInfoProto namespaceInfo = 2;
			/// <summary><code>optional .hadoop.hdfs.NamespaceInfoProto namespaceInfo = 2;</code>
			/// 	</summary>
			bool HasNamespaceInfo();

			/// <summary><code>optional .hadoop.hdfs.NamespaceInfoProto namespaceInfo = 2;</code>
			/// 	</summary>
			HdfsProtos.NamespaceInfoProto GetNamespaceInfo();

			/// <summary><code>optional .hadoop.hdfs.NamespaceInfoProto namespaceInfo = 2;</code>
			/// 	</summary>
			HdfsProtos.NamespaceInfoProtoOrBuilder GetNamespaceInfoOrBuilder();
		}

		/// <summary>
		/// Protobuf type
		/// <c>hadoop.hdfs.VersionProto</c>
		/// </summary>
		[System.Serializable]
		public sealed class VersionProto : GeneratedMessage, BKJournalProtos.VersionProtoOrBuilder
		{
			private VersionProto(GeneratedMessage.Builder<object> builder)
				: base(builder)
			{
				// Use VersionProto.newBuilder() to construct.
				this.unknownFields = builder.GetUnknownFields();
			}

			private VersionProto(bool noInit)
			{
				this.unknownFields = UnknownFieldSet.GetDefaultInstance();
			}

			private static readonly BKJournalProtos.VersionProto defaultInstance;

			public static BKJournalProtos.VersionProto GetDefaultInstance()
			{
				return defaultInstance;
			}

			public override MessageLite GetDefaultInstanceForType()
			{
				return defaultInstance;
			}

			private readonly UnknownFieldSet unknownFields;

			public sealed override UnknownFieldSet GetUnknownFields()
			{
				return this.unknownFields;
			}

			/// <exception cref="Com.Google.Protobuf.InvalidProtocolBufferException"/>
			private VersionProto(CodedInputStream input, ExtensionRegistryLite extensionRegistry
				)
			{
				InitFields();
				int mutable_bitField0_ = 0;
				UnknownFieldSet.Builder unknownFields = UnknownFieldSet.NewBuilder();
				try
				{
					bool done = false;
					while (!done)
					{
						int tag = input.ReadTag();
						switch (tag)
						{
							case 0:
							{
								done = true;
								break;
							}

							default:
							{
								if (!ParseUnknownField(input, unknownFields, extensionRegistry, tag))
								{
									done = true;
								}
								break;
							}

							case 8:
							{
								bitField0_ |= unchecked((int)(0x00000001));
								layoutVersion_ = input.ReadInt32();
								break;
							}

							case 18:
							{
								HdfsProtos.NamespaceInfoProto.Builder subBuilder = null;
								if (((bitField0_ & unchecked((int)(0x00000002))) == unchecked((int)(0x00000002))))
								{
									subBuilder = ((HdfsProtos.NamespaceInfoProto.Builder)namespaceInfo_.ToBuilder());
								}
								namespaceInfo_ = input.ReadMessage(HdfsProtos.NamespaceInfoProto.Parser, extensionRegistry
									);
								if (subBuilder != null)
								{
									subBuilder.MergeFrom(namespaceInfo_);
									namespaceInfo_ = ((HdfsProtos.NamespaceInfoProto)subBuilder.BuildPartial());
								}
								bitField0_ |= unchecked((int)(0x00000002));
								break;
							}
						}
					}
				}
				catch (InvalidProtocolBufferException e)
				{
					throw e.SetUnfinishedMessage(this);
				}
				catch (IOException e)
				{
					throw new InvalidProtocolBufferException(e.Message).SetUnfinishedMessage(this);
				}
				finally
				{
					this.unknownFields = unknownFields.Build();
					MakeExtensionsImmutable();
				}
			}

			public static Descriptors.Descriptor GetDescriptor()
			{
				return BKJournalProtos.internal_static_hadoop_hdfs_VersionProto_descriptor;
			}

			protected override GeneratedMessage.FieldAccessorTable InternalGetFieldAccessorTable
				()
			{
				return BKJournalProtos.internal_static_hadoop_hdfs_VersionProto_fieldAccessorTable
					.EnsureFieldAccessorsInitialized(typeof(BKJournalProtos.VersionProto), typeof(BKJournalProtos.VersionProto.Builder
					));
			}

			private sealed class _AbstractParser_132 : AbstractParser<BKJournalProtos.VersionProto
				>
			{
				public _AbstractParser_132()
				{
				}

				/// <exception cref="Com.Google.Protobuf.InvalidProtocolBufferException"/>
				public override BKJournalProtos.VersionProto ParsePartialFrom(CodedInputStream input
					, ExtensionRegistryLite extensionRegistry)
				{
					return new BKJournalProtos.VersionProto(input, extensionRegistry);
				}
			}

			public static Parser<BKJournalProtos.VersionProto> Parser = new _AbstractParser_132
				();

			public override Parser<MessageLite> GetParserForType()
			{
				return Parser;
			}

			private int bitField0_;

			public const int LayoutversionFieldNumber = 1;

			private int layoutVersion_;

			// required int32 layoutVersion = 1;
			/// <summary><code>required int32 layoutVersion = 1;</code></summary>
			public bool HasLayoutVersion()
			{
				return ((bitField0_ & unchecked((int)(0x00000001))) == unchecked((int)(0x00000001
					)));
			}

			/// <summary><code>required int32 layoutVersion = 1;</code></summary>
			public int GetLayoutVersion()
			{
				return layoutVersion_;
			}

			public const int NamespaceinfoFieldNumber = 2;

			private HdfsProtos.NamespaceInfoProto namespaceInfo_;

			// optional .hadoop.hdfs.NamespaceInfoProto namespaceInfo = 2;
			/// <summary><code>optional .hadoop.hdfs.NamespaceInfoProto namespaceInfo = 2;</code>
			/// 	</summary>
			public bool HasNamespaceInfo()
			{
				return ((bitField0_ & unchecked((int)(0x00000002))) == unchecked((int)(0x00000002
					)));
			}

			/// <summary><code>optional .hadoop.hdfs.NamespaceInfoProto namespaceInfo = 2;</code>
			/// 	</summary>
			public HdfsProtos.NamespaceInfoProto GetNamespaceInfo()
			{
				return namespaceInfo_;
			}

			/// <summary><code>optional .hadoop.hdfs.NamespaceInfoProto namespaceInfo = 2;</code>
			/// 	</summary>
			public HdfsProtos.NamespaceInfoProtoOrBuilder GetNamespaceInfoOrBuilder()
			{
				return namespaceInfo_;
			}

			private void InitFields()
			{
				layoutVersion_ = 0;
				namespaceInfo_ = HdfsProtos.NamespaceInfoProto.GetDefaultInstance();
			}

			private byte memoizedIsInitialized = unchecked((byte)(-1));

			public sealed override bool IsInitialized()
			{
				byte isInitialized = memoizedIsInitialized;
				if (isInitialized != -1)
				{
					return isInitialized == 1;
				}
				if (!HasLayoutVersion())
				{
					memoizedIsInitialized = 0;
					return false;
				}
				if (HasNamespaceInfo())
				{
					if (!GetNamespaceInfo().IsInitialized())
					{
						memoizedIsInitialized = 0;
						return false;
					}
				}
				memoizedIsInitialized = 1;
				return true;
			}

			/// <exception cref="System.IO.IOException"/>
			public override void WriteTo(CodedOutputStream output)
			{
				GetSerializedSize();
				if (((bitField0_ & unchecked((int)(0x00000001))) == unchecked((int)(0x00000001))))
				{
					output.WriteInt32(1, layoutVersion_);
				}
				if (((bitField0_ & unchecked((int)(0x00000002))) == unchecked((int)(0x00000002))))
				{
					output.WriteMessage(2, namespaceInfo_);
				}
				GetUnknownFields().WriteTo(output);
			}

			private int memoizedSerializedSize = -1;

			public override int GetSerializedSize()
			{
				int size = memoizedSerializedSize;
				if (size != -1)
				{
					return size;
				}
				size = 0;
				if (((bitField0_ & unchecked((int)(0x00000001))) == unchecked((int)(0x00000001))))
				{
					size += CodedOutputStream.ComputeInt32Size(1, layoutVersion_);
				}
				if (((bitField0_ & unchecked((int)(0x00000002))) == unchecked((int)(0x00000002))))
				{
					size += CodedOutputStream.ComputeMessageSize(2, namespaceInfo_);
				}
				size += GetUnknownFields().GetSerializedSize();
				memoizedSerializedSize = size;
				return size;
			}

			private const long serialVersionUID = 0L;

			/// <exception cref="System.IO.ObjectStreamException"/>
			protected override object WriteReplace()
			{
				return base.WriteReplace();
			}

			public override bool Equals(object obj)
			{
				if (obj == this)
				{
					return true;
				}
				if (!(obj is BKJournalProtos.VersionProto))
				{
					return base.Equals(obj);
				}
				BKJournalProtos.VersionProto other = (BKJournalProtos.VersionProto)obj;
				bool result = true;
				result = result && (HasLayoutVersion() == other.HasLayoutVersion());
				if (HasLayoutVersion())
				{
					result = result && (GetLayoutVersion() == other.GetLayoutVersion());
				}
				result = result && (HasNamespaceInfo() == other.HasNamespaceInfo());
				if (HasNamespaceInfo())
				{
					result = result && GetNamespaceInfo().Equals(other.GetNamespaceInfo());
				}
				result = result && GetUnknownFields().Equals(other.GetUnknownFields());
				return result;
			}

			private int memoizedHashCode = 0;

			public override int GetHashCode()
			{
				if (memoizedHashCode != 0)
				{
					return memoizedHashCode;
				}
				int hash = 41;
				hash = (19 * hash) + GetDescriptorForType().GetHashCode();
				if (HasLayoutVersion())
				{
					hash = (37 * hash) + LayoutversionFieldNumber;
					hash = (53 * hash) + GetLayoutVersion();
				}
				if (HasNamespaceInfo())
				{
					hash = (37 * hash) + NamespaceinfoFieldNumber;
					hash = (53 * hash) + GetNamespaceInfo().GetHashCode();
				}
				hash = (29 * hash) + GetUnknownFields().GetHashCode();
				memoizedHashCode = hash;
				return hash;
			}

			/// <exception cref="Com.Google.Protobuf.InvalidProtocolBufferException"/>
			public static BKJournalProtos.VersionProto ParseFrom(ByteString data)
			{
				return Parser.ParseFrom(data);
			}

			/// <exception cref="Com.Google.Protobuf.InvalidProtocolBufferException"/>
			public static BKJournalProtos.VersionProto ParseFrom(ByteString data, ExtensionRegistryLite
				 extensionRegistry)
			{
				return Parser.ParseFrom(data, extensionRegistry);
			}

			/// <exception cref="Com.Google.Protobuf.InvalidProtocolBufferException"/>
			public static BKJournalProtos.VersionProto ParseFrom(byte[] data)
			{
				return Parser.ParseFrom(data);
			}

			/// <exception cref="Com.Google.Protobuf.InvalidProtocolBufferException"/>
			public static BKJournalProtos.VersionProto ParseFrom(byte[] data, ExtensionRegistryLite
				 extensionRegistry)
			{
				return Parser.ParseFrom(data, extensionRegistry);
			}

			/// <exception cref="System.IO.IOException"/>
			public static BKJournalProtos.VersionProto ParseFrom(InputStream input)
			{
				return Parser.ParseFrom(input);
			}

			/// <exception cref="System.IO.IOException"/>
			public static BKJournalProtos.VersionProto ParseFrom(InputStream input, ExtensionRegistryLite
				 extensionRegistry)
			{
				return Parser.ParseFrom(input, extensionRegistry);
			}

			/// <exception cref="System.IO.IOException"/>
			public static BKJournalProtos.VersionProto ParseDelimitedFrom(InputStream input)
			{
				return Parser.ParseDelimitedFrom(input);
			}

			/// <exception cref="System.IO.IOException"/>
			public static BKJournalProtos.VersionProto ParseDelimitedFrom(InputStream input, 
				ExtensionRegistryLite extensionRegistry)
			{
				return Parser.ParseDelimitedFrom(input, extensionRegistry);
			}

			/// <exception cref="System.IO.IOException"/>
			public static BKJournalProtos.VersionProto ParseFrom(CodedInputStream input)
			{
				return Parser.ParseFrom(input);
			}

			/// <exception cref="System.IO.IOException"/>
			public static BKJournalProtos.VersionProto ParseFrom(CodedInputStream input, ExtensionRegistryLite
				 extensionRegistry)
			{
				return Parser.ParseFrom(input, extensionRegistry);
			}

			public static BKJournalProtos.VersionProto.Builder NewBuilder()
			{
				return BKJournalProtos.VersionProto.Builder.Create();
			}

			public override MessageLite.Builder NewBuilderForType()
			{
				return NewBuilder();
			}

			public static BKJournalProtos.VersionProto.Builder NewBuilder(BKJournalProtos.VersionProto
				 prototype)
			{
				return NewBuilder().MergeFrom(prototype);
			}

			public override MessageLite.Builder ToBuilder()
			{
				return NewBuilder(this);
			}

			protected override Message.Builder NewBuilderForType(GeneratedMessage.BuilderParent
				 parent)
			{
				BKJournalProtos.VersionProto.Builder builder = new BKJournalProtos.VersionProto.Builder
					(parent);
				return builder;
			}

			/// <summary>
			/// Protobuf type
			/// <c>hadoop.hdfs.VersionProto</c>
			/// </summary>
			public sealed class Builder : GeneratedMessage.Builder<BKJournalProtos.VersionProto.Builder
				>, BKJournalProtos.VersionProtoOrBuilder
			{
				public static Descriptors.Descriptor GetDescriptor()
				{
					return BKJournalProtos.internal_static_hadoop_hdfs_VersionProto_descriptor;
				}

				protected override GeneratedMessage.FieldAccessorTable InternalGetFieldAccessorTable
					()
				{
					return BKJournalProtos.internal_static_hadoop_hdfs_VersionProto_fieldAccessorTable
						.EnsureFieldAccessorsInitialized(typeof(BKJournalProtos.VersionProto), typeof(BKJournalProtos.VersionProto.Builder
						));
				}

				private Builder()
				{
					// Construct using org.apache.hadoop.contrib.bkjournal.BKJournalProtos.VersionProto.newBuilder()
					MaybeForceBuilderInitialization();
				}

				private Builder(GeneratedMessage.BuilderParent parent)
					: base(parent)
				{
					MaybeForceBuilderInitialization();
				}

				private void MaybeForceBuilderInitialization()
				{
					if (GeneratedMessage.alwaysUseFieldBuilders)
					{
						GetNamespaceInfoFieldBuilder();
					}
				}

				private static BKJournalProtos.VersionProto.Builder Create()
				{
					return new BKJournalProtos.VersionProto.Builder();
				}

				public override MessageLite.Builder Clear()
				{
					base.Clear();
					layoutVersion_ = 0;
					bitField0_ = (bitField0_ & ~unchecked((int)(0x00000001)));
					if (namespaceInfoBuilder_ == null)
					{
						namespaceInfo_ = HdfsProtos.NamespaceInfoProto.GetDefaultInstance();
					}
					else
					{
						namespaceInfoBuilder_.Clear();
					}
					bitField0_ = (bitField0_ & ~unchecked((int)(0x00000002)));
					return this;
				}

				public override BKJournalProtos.VersionProto.Builder Clone()
				{
					return Create().MergeFrom(((BKJournalProtos.VersionProto)BuildPartial()));
				}

				public override Descriptors.Descriptor GetDescriptorForType()
				{
					return BKJournalProtos.internal_static_hadoop_hdfs_VersionProto_descriptor;
				}

				public override MessageLite GetDefaultInstanceForType()
				{
					return BKJournalProtos.VersionProto.GetDefaultInstance();
				}

				public override MessageLite Build()
				{
					BKJournalProtos.VersionProto result = ((BKJournalProtos.VersionProto)BuildPartial
						());
					if (!result.IsInitialized())
					{
						throw NewUninitializedMessageException(result);
					}
					return result;
				}

				public override MessageLite BuildPartial()
				{
					BKJournalProtos.VersionProto result = new BKJournalProtos.VersionProto(this);
					int from_bitField0_ = bitField0_;
					int to_bitField0_ = 0;
					if (((from_bitField0_ & unchecked((int)(0x00000001))) == unchecked((int)(0x00000001
						))))
					{
						to_bitField0_ |= unchecked((int)(0x00000001));
					}
					result.layoutVersion_ = layoutVersion_;
					if (((from_bitField0_ & unchecked((int)(0x00000002))) == unchecked((int)(0x00000002
						))))
					{
						to_bitField0_ |= unchecked((int)(0x00000002));
					}
					if (namespaceInfoBuilder_ == null)
					{
						result.namespaceInfo_ = namespaceInfo_;
					}
					else
					{
						result.namespaceInfo_ = namespaceInfoBuilder_.Build();
					}
					result.bitField0_ = to_bitField0_;
					OnBuilt();
					return result;
				}

				public override BKJournalProtos.VersionProto.Builder MergeFrom(Message other)
				{
					if (other is BKJournalProtos.VersionProto)
					{
						return MergeFrom((BKJournalProtos.VersionProto)other);
					}
					else
					{
						base.MergeFrom(other);
						return this;
					}
				}

				public BKJournalProtos.VersionProto.Builder MergeFrom(BKJournalProtos.VersionProto
					 other)
				{
					if (other == BKJournalProtos.VersionProto.GetDefaultInstance())
					{
						return this;
					}
					if (other.HasLayoutVersion())
					{
						SetLayoutVersion(other.GetLayoutVersion());
					}
					if (other.HasNamespaceInfo())
					{
						MergeNamespaceInfo(other.GetNamespaceInfo());
					}
					this.MergeUnknownFields(other.GetUnknownFields());
					return this;
				}

				public sealed override bool IsInitialized()
				{
					if (!HasLayoutVersion())
					{
						return false;
					}
					if (HasNamespaceInfo())
					{
						if (!GetNamespaceInfo().IsInitialized())
						{
							return false;
						}
					}
					return true;
				}

				/// <exception cref="System.IO.IOException"/>
				public override BKJournalProtos.VersionProto.Builder MergeFrom(CodedInputStream input
					, ExtensionRegistryLite extensionRegistry)
				{
					BKJournalProtos.VersionProto parsedMessage = null;
					try
					{
						parsedMessage = Parser.ParsePartialFrom(input, extensionRegistry);
					}
					catch (InvalidProtocolBufferException e)
					{
						parsedMessage = (BKJournalProtos.VersionProto)e.GetUnfinishedMessage();
						throw;
					}
					finally
					{
						if (parsedMessage != null)
						{
							MergeFrom(parsedMessage);
						}
					}
					return this;
				}

				private int bitField0_;

				private int layoutVersion_;

				// required int32 layoutVersion = 1;
				/// <summary><code>required int32 layoutVersion = 1;</code></summary>
				public bool HasLayoutVersion()
				{
					return ((bitField0_ & unchecked((int)(0x00000001))) == unchecked((int)(0x00000001
						)));
				}

				/// <summary><code>required int32 layoutVersion = 1;</code></summary>
				public int GetLayoutVersion()
				{
					return layoutVersion_;
				}

				/// <summary><code>required int32 layoutVersion = 1;</code></summary>
				public BKJournalProtos.VersionProto.Builder SetLayoutVersion(int value)
				{
					bitField0_ |= unchecked((int)(0x00000001));
					layoutVersion_ = value;
					OnChanged();
					return this;
				}

				/// <summary><code>required int32 layoutVersion = 1;</code></summary>
				public BKJournalProtos.VersionProto.Builder ClearLayoutVersion()
				{
					bitField0_ = (bitField0_ & ~unchecked((int)(0x00000001)));
					layoutVersion_ = 0;
					OnChanged();
					return this;
				}

				private HdfsProtos.NamespaceInfoProto namespaceInfo_ = HdfsProtos.NamespaceInfoProto
					.GetDefaultInstance();

				private SingleFieldBuilder<HdfsProtos.NamespaceInfoProto, HdfsProtos.NamespaceInfoProto.Builder
					, HdfsProtos.NamespaceInfoProtoOrBuilder> namespaceInfoBuilder_;

				// optional .hadoop.hdfs.NamespaceInfoProto namespaceInfo = 2;
				/// <summary><code>optional .hadoop.hdfs.NamespaceInfoProto namespaceInfo = 2;</code>
				/// 	</summary>
				public bool HasNamespaceInfo()
				{
					return ((bitField0_ & unchecked((int)(0x00000002))) == unchecked((int)(0x00000002
						)));
				}

				/// <summary><code>optional .hadoop.hdfs.NamespaceInfoProto namespaceInfo = 2;</code>
				/// 	</summary>
				public HdfsProtos.NamespaceInfoProto GetNamespaceInfo()
				{
					if (namespaceInfoBuilder_ == null)
					{
						return namespaceInfo_;
					}
					else
					{
						return namespaceInfoBuilder_.GetMessage();
					}
				}

				/// <summary><code>optional .hadoop.hdfs.NamespaceInfoProto namespaceInfo = 2;</code>
				/// 	</summary>
				public BKJournalProtos.VersionProto.Builder SetNamespaceInfo(HdfsProtos.NamespaceInfoProto
					 value)
				{
					if (namespaceInfoBuilder_ == null)
					{
						if (value == null)
						{
							throw new ArgumentNullException();
						}
						namespaceInfo_ = value;
						OnChanged();
					}
					else
					{
						namespaceInfoBuilder_.SetMessage(value);
					}
					bitField0_ |= unchecked((int)(0x00000002));
					return this;
				}

				/// <summary><code>optional .hadoop.hdfs.NamespaceInfoProto namespaceInfo = 2;</code>
				/// 	</summary>
				public BKJournalProtos.VersionProto.Builder SetNamespaceInfo(HdfsProtos.NamespaceInfoProto.Builder
					 builderForValue)
				{
					if (namespaceInfoBuilder_ == null)
					{
						namespaceInfo_ = ((HdfsProtos.NamespaceInfoProto)builderForValue.Build());
						OnChanged();
					}
					else
					{
						namespaceInfoBuilder_.SetMessage(((HdfsProtos.NamespaceInfoProto)builderForValue.
							Build()));
					}
					bitField0_ |= unchecked((int)(0x00000002));
					return this;
				}

				/// <summary><code>optional .hadoop.hdfs.NamespaceInfoProto namespaceInfo = 2;</code>
				/// 	</summary>
				public BKJournalProtos.VersionProto.Builder MergeNamespaceInfo(HdfsProtos.NamespaceInfoProto
					 value)
				{
					if (namespaceInfoBuilder_ == null)
					{
						if (((bitField0_ & unchecked((int)(0x00000002))) == unchecked((int)(0x00000002)))
							 && namespaceInfo_ != HdfsProtos.NamespaceInfoProto.GetDefaultInstance())
						{
							namespaceInfo_ = ((HdfsProtos.NamespaceInfoProto)HdfsProtos.NamespaceInfoProto.NewBuilder
								(namespaceInfo_).MergeFrom(value).BuildPartial());
						}
						else
						{
							namespaceInfo_ = value;
						}
						OnChanged();
					}
					else
					{
						namespaceInfoBuilder_.MergeFrom(value);
					}
					bitField0_ |= unchecked((int)(0x00000002));
					return this;
				}

				/// <summary><code>optional .hadoop.hdfs.NamespaceInfoProto namespaceInfo = 2;</code>
				/// 	</summary>
				public BKJournalProtos.VersionProto.Builder ClearNamespaceInfo()
				{
					if (namespaceInfoBuilder_ == null)
					{
						namespaceInfo_ = HdfsProtos.NamespaceInfoProto.GetDefaultInstance();
						OnChanged();
					}
					else
					{
						namespaceInfoBuilder_.Clear();
					}
					bitField0_ = (bitField0_ & ~unchecked((int)(0x00000002)));
					return this;
				}

				/// <summary><code>optional .hadoop.hdfs.NamespaceInfoProto namespaceInfo = 2;</code>
				/// 	</summary>
				public HdfsProtos.NamespaceInfoProto.Builder GetNamespaceInfoBuilder()
				{
					bitField0_ |= unchecked((int)(0x00000002));
					OnChanged();
					return GetNamespaceInfoFieldBuilder().GetBuilder();
				}

				/// <summary><code>optional .hadoop.hdfs.NamespaceInfoProto namespaceInfo = 2;</code>
				/// 	</summary>
				public HdfsProtos.NamespaceInfoProtoOrBuilder GetNamespaceInfoOrBuilder()
				{
					if (namespaceInfoBuilder_ != null)
					{
						return namespaceInfoBuilder_.GetMessageOrBuilder();
					}
					else
					{
						return namespaceInfo_;
					}
				}

				/// <summary><code>optional .hadoop.hdfs.NamespaceInfoProto namespaceInfo = 2;</code>
				/// 	</summary>
				private SingleFieldBuilder<HdfsProtos.NamespaceInfoProto, HdfsProtos.NamespaceInfoProto.Builder
					, HdfsProtos.NamespaceInfoProtoOrBuilder> GetNamespaceInfoFieldBuilder()
				{
					if (namespaceInfoBuilder_ == null)
					{
						namespaceInfoBuilder_ = new SingleFieldBuilder<HdfsProtos.NamespaceInfoProto, HdfsProtos.NamespaceInfoProto.Builder
							, HdfsProtos.NamespaceInfoProtoOrBuilder>(namespaceInfo_, GetParentForChildren()
							, IsClean());
						namespaceInfo_ = null;
					}
					return namespaceInfoBuilder_;
				}
				// @@protoc_insertion_point(builder_scope:hadoop.hdfs.VersionProto)
			}

			static VersionProto()
			{
				defaultInstance = new BKJournalProtos.VersionProto(true);
				defaultInstance.InitFields();
			}
			// @@protoc_insertion_point(class_scope:hadoop.hdfs.VersionProto)
		}

		public interface EditLogLedgerProtoOrBuilder : MessageOrBuilder
		{
			// required int32 dataLayoutVersion = 1;
			/// <summary><code>required int32 dataLayoutVersion = 1;</code></summary>
			bool HasDataLayoutVersion();

			/// <summary><code>required int32 dataLayoutVersion = 1;</code></summary>
			int GetDataLayoutVersion();

			// required int64 ledgerId = 2;
			/// <summary><code>required int64 ledgerId = 2;</code></summary>
			bool HasLedgerId();

			/// <summary><code>required int64 ledgerId = 2;</code></summary>
			long GetLedgerId();

			// required int64 firstTxId = 3;
			/// <summary><code>required int64 firstTxId = 3;</code></summary>
			bool HasFirstTxId();

			/// <summary><code>required int64 firstTxId = 3;</code></summary>
			long GetFirstTxId();

			// optional int64 lastTxId = 4;
			/// <summary><code>optional int64 lastTxId = 4;</code></summary>
			bool HasLastTxId();

			/// <summary><code>optional int64 lastTxId = 4;</code></summary>
			long GetLastTxId();
		}

		/// <summary>
		/// Protobuf type
		/// <c>hadoop.hdfs.EditLogLedgerProto</c>
		/// </summary>
		[System.Serializable]
		public sealed class EditLogLedgerProto : GeneratedMessage, BKJournalProtos.EditLogLedgerProtoOrBuilder
		{
			private EditLogLedgerProto(GeneratedMessage.Builder<object> builder)
				: base(builder)
			{
				// Use EditLogLedgerProto.newBuilder() to construct.
				this.unknownFields = builder.GetUnknownFields();
			}

			private EditLogLedgerProto(bool noInit)
			{
				this.unknownFields = UnknownFieldSet.GetDefaultInstance();
			}

			private static readonly BKJournalProtos.EditLogLedgerProto defaultInstance;

			public static BKJournalProtos.EditLogLedgerProto GetDefaultInstance()
			{
				return defaultInstance;
			}

			public override MessageLite GetDefaultInstanceForType()
			{
				return defaultInstance;
			}

			private readonly UnknownFieldSet unknownFields;

			public sealed override UnknownFieldSet GetUnknownFields()
			{
				return this.unknownFields;
			}

			/// <exception cref="Com.Google.Protobuf.InvalidProtocolBufferException"/>
			private EditLogLedgerProto(CodedInputStream input, ExtensionRegistryLite extensionRegistry
				)
			{
				InitFields();
				int mutable_bitField0_ = 0;
				UnknownFieldSet.Builder unknownFields = UnknownFieldSet.NewBuilder();
				try
				{
					bool done = false;
					while (!done)
					{
						int tag = input.ReadTag();
						switch (tag)
						{
							case 0:
							{
								done = true;
								break;
							}

							default:
							{
								if (!ParseUnknownField(input, unknownFields, extensionRegistry, tag))
								{
									done = true;
								}
								break;
							}

							case 8:
							{
								bitField0_ |= unchecked((int)(0x00000001));
								dataLayoutVersion_ = input.ReadInt32();
								break;
							}

							case 16:
							{
								bitField0_ |= unchecked((int)(0x00000002));
								ledgerId_ = input.ReadInt64();
								break;
							}

							case 24:
							{
								bitField0_ |= unchecked((int)(0x00000004));
								firstTxId_ = input.ReadInt64();
								break;
							}

							case 32:
							{
								bitField0_ |= unchecked((int)(0x00000008));
								lastTxId_ = input.ReadInt64();
								break;
							}
						}
					}
				}
				catch (InvalidProtocolBufferException e)
				{
					throw e.SetUnfinishedMessage(this);
				}
				catch (IOException e)
				{
					throw new InvalidProtocolBufferException(e.Message).SetUnfinishedMessage(this);
				}
				finally
				{
					this.unknownFields = unknownFields.Build();
					MakeExtensionsImmutable();
				}
			}

			public static Descriptors.Descriptor GetDescriptor()
			{
				return BKJournalProtos.internal_static_hadoop_hdfs_EditLogLedgerProto_descriptor;
			}

			protected override GeneratedMessage.FieldAccessorTable InternalGetFieldAccessorTable
				()
			{
				return BKJournalProtos.internal_static_hadoop_hdfs_EditLogLedgerProto_fieldAccessorTable
					.EnsureFieldAccessorsInitialized(typeof(BKJournalProtos.EditLogLedgerProto), typeof(
					BKJournalProtos.EditLogLedgerProto.Builder));
			}

			private sealed class _AbstractParser_805 : AbstractParser<BKJournalProtos.EditLogLedgerProto
				>
			{
				public _AbstractParser_805()
				{
				}

				/// <exception cref="Com.Google.Protobuf.InvalidProtocolBufferException"/>
				public override BKJournalProtos.EditLogLedgerProto ParsePartialFrom(CodedInputStream
					 input, ExtensionRegistryLite extensionRegistry)
				{
					return new BKJournalProtos.EditLogLedgerProto(input, extensionRegistry);
				}
			}

			public static Parser<BKJournalProtos.EditLogLedgerProto> Parser = new _AbstractParser_805
				();

			public override Parser<MessageLite> GetParserForType()
			{
				return Parser;
			}

			private int bitField0_;

			public const int DatalayoutversionFieldNumber = 1;

			private int dataLayoutVersion_;

			// required int32 dataLayoutVersion = 1;
			/// <summary><code>required int32 dataLayoutVersion = 1;</code></summary>
			public bool HasDataLayoutVersion()
			{
				return ((bitField0_ & unchecked((int)(0x00000001))) == unchecked((int)(0x00000001
					)));
			}

			/// <summary><code>required int32 dataLayoutVersion = 1;</code></summary>
			public int GetDataLayoutVersion()
			{
				return dataLayoutVersion_;
			}

			public const int LedgeridFieldNumber = 2;

			private long ledgerId_;

			// required int64 ledgerId = 2;
			/// <summary><code>required int64 ledgerId = 2;</code></summary>
			public bool HasLedgerId()
			{
				return ((bitField0_ & unchecked((int)(0x00000002))) == unchecked((int)(0x00000002
					)));
			}

			/// <summary><code>required int64 ledgerId = 2;</code></summary>
			public long GetLedgerId()
			{
				return ledgerId_;
			}

			public const int FirsttxidFieldNumber = 3;

			private long firstTxId_;

			// required int64 firstTxId = 3;
			/// <summary><code>required int64 firstTxId = 3;</code></summary>
			public bool HasFirstTxId()
			{
				return ((bitField0_ & unchecked((int)(0x00000004))) == unchecked((int)(0x00000004
					)));
			}

			/// <summary><code>required int64 firstTxId = 3;</code></summary>
			public long GetFirstTxId()
			{
				return firstTxId_;
			}

			public const int LasttxidFieldNumber = 4;

			private long lastTxId_;

			// optional int64 lastTxId = 4;
			/// <summary><code>optional int64 lastTxId = 4;</code></summary>
			public bool HasLastTxId()
			{
				return ((bitField0_ & unchecked((int)(0x00000008))) == unchecked((int)(0x00000008
					)));
			}

			/// <summary><code>optional int64 lastTxId = 4;</code></summary>
			public long GetLastTxId()
			{
				return lastTxId_;
			}

			private void InitFields()
			{
				dataLayoutVersion_ = 0;
				ledgerId_ = 0L;
				firstTxId_ = 0L;
				lastTxId_ = 0L;
			}

			private byte memoizedIsInitialized = unchecked((byte)(-1));

			public sealed override bool IsInitialized()
			{
				byte isInitialized = memoizedIsInitialized;
				if (isInitialized != -1)
				{
					return isInitialized == 1;
				}
				if (!HasDataLayoutVersion())
				{
					memoizedIsInitialized = 0;
					return false;
				}
				if (!HasLedgerId())
				{
					memoizedIsInitialized = 0;
					return false;
				}
				if (!HasFirstTxId())
				{
					memoizedIsInitialized = 0;
					return false;
				}
				memoizedIsInitialized = 1;
				return true;
			}

			/// <exception cref="System.IO.IOException"/>
			public override void WriteTo(CodedOutputStream output)
			{
				GetSerializedSize();
				if (((bitField0_ & unchecked((int)(0x00000001))) == unchecked((int)(0x00000001))))
				{
					output.WriteInt32(1, dataLayoutVersion_);
				}
				if (((bitField0_ & unchecked((int)(0x00000002))) == unchecked((int)(0x00000002))))
				{
					output.WriteInt64(2, ledgerId_);
				}
				if (((bitField0_ & unchecked((int)(0x00000004))) == unchecked((int)(0x00000004))))
				{
					output.WriteInt64(3, firstTxId_);
				}
				if (((bitField0_ & unchecked((int)(0x00000008))) == unchecked((int)(0x00000008))))
				{
					output.WriteInt64(4, lastTxId_);
				}
				GetUnknownFields().WriteTo(output);
			}

			private int memoizedSerializedSize = -1;

			public override int GetSerializedSize()
			{
				int size = memoizedSerializedSize;
				if (size != -1)
				{
					return size;
				}
				size = 0;
				if (((bitField0_ & unchecked((int)(0x00000001))) == unchecked((int)(0x00000001))))
				{
					size += CodedOutputStream.ComputeInt32Size(1, dataLayoutVersion_);
				}
				if (((bitField0_ & unchecked((int)(0x00000002))) == unchecked((int)(0x00000002))))
				{
					size += CodedOutputStream.ComputeInt64Size(2, ledgerId_);
				}
				if (((bitField0_ & unchecked((int)(0x00000004))) == unchecked((int)(0x00000004))))
				{
					size += CodedOutputStream.ComputeInt64Size(3, firstTxId_);
				}
				if (((bitField0_ & unchecked((int)(0x00000008))) == unchecked((int)(0x00000008))))
				{
					size += CodedOutputStream.ComputeInt64Size(4, lastTxId_);
				}
				size += GetUnknownFields().GetSerializedSize();
				memoizedSerializedSize = size;
				return size;
			}

			private const long serialVersionUID = 0L;

			/// <exception cref="System.IO.ObjectStreamException"/>
			protected override object WriteReplace()
			{
				return base.WriteReplace();
			}

			public override bool Equals(object obj)
			{
				if (obj == this)
				{
					return true;
				}
				if (!(obj is BKJournalProtos.EditLogLedgerProto))
				{
					return base.Equals(obj);
				}
				BKJournalProtos.EditLogLedgerProto other = (BKJournalProtos.EditLogLedgerProto)obj;
				bool result = true;
				result = result && (HasDataLayoutVersion() == other.HasDataLayoutVersion());
				if (HasDataLayoutVersion())
				{
					result = result && (GetDataLayoutVersion() == other.GetDataLayoutVersion());
				}
				result = result && (HasLedgerId() == other.HasLedgerId());
				if (HasLedgerId())
				{
					result = result && (GetLedgerId() == other.GetLedgerId());
				}
				result = result && (HasFirstTxId() == other.HasFirstTxId());
				if (HasFirstTxId())
				{
					result = result && (GetFirstTxId() == other.GetFirstTxId());
				}
				result = result && (HasLastTxId() == other.HasLastTxId());
				if (HasLastTxId())
				{
					result = result && (GetLastTxId() == other.GetLastTxId());
				}
				result = result && GetUnknownFields().Equals(other.GetUnknownFields());
				return result;
			}

			private int memoizedHashCode = 0;

			public override int GetHashCode()
			{
				if (memoizedHashCode != 0)
				{
					return memoizedHashCode;
				}
				int hash = 41;
				hash = (19 * hash) + GetDescriptorForType().GetHashCode();
				if (HasDataLayoutVersion())
				{
					hash = (37 * hash) + DatalayoutversionFieldNumber;
					hash = (53 * hash) + GetDataLayoutVersion();
				}
				if (HasLedgerId())
				{
					hash = (37 * hash) + LedgeridFieldNumber;
					hash = (53 * hash) + HashLong(GetLedgerId());
				}
				if (HasFirstTxId())
				{
					hash = (37 * hash) + FirsttxidFieldNumber;
					hash = (53 * hash) + HashLong(GetFirstTxId());
				}
				if (HasLastTxId())
				{
					hash = (37 * hash) + LasttxidFieldNumber;
					hash = (53 * hash) + HashLong(GetLastTxId());
				}
				hash = (29 * hash) + GetUnknownFields().GetHashCode();
				memoizedHashCode = hash;
				return hash;
			}

			/// <exception cref="Com.Google.Protobuf.InvalidProtocolBufferException"/>
			public static BKJournalProtos.EditLogLedgerProto ParseFrom(ByteString data)
			{
				return Parser.ParseFrom(data);
			}

			/// <exception cref="Com.Google.Protobuf.InvalidProtocolBufferException"/>
			public static BKJournalProtos.EditLogLedgerProto ParseFrom(ByteString data, ExtensionRegistryLite
				 extensionRegistry)
			{
				return Parser.ParseFrom(data, extensionRegistry);
			}

			/// <exception cref="Com.Google.Protobuf.InvalidProtocolBufferException"/>
			public static BKJournalProtos.EditLogLedgerProto ParseFrom(byte[] data)
			{
				return Parser.ParseFrom(data);
			}

			/// <exception cref="Com.Google.Protobuf.InvalidProtocolBufferException"/>
			public static BKJournalProtos.EditLogLedgerProto ParseFrom(byte[] data, ExtensionRegistryLite
				 extensionRegistry)
			{
				return Parser.ParseFrom(data, extensionRegistry);
			}

			/// <exception cref="System.IO.IOException"/>
			public static BKJournalProtos.EditLogLedgerProto ParseFrom(InputStream input)
			{
				return Parser.ParseFrom(input);
			}

			/// <exception cref="System.IO.IOException"/>
			public static BKJournalProtos.EditLogLedgerProto ParseFrom(InputStream input, ExtensionRegistryLite
				 extensionRegistry)
			{
				return Parser.ParseFrom(input, extensionRegistry);
			}

			/// <exception cref="System.IO.IOException"/>
			public static BKJournalProtos.EditLogLedgerProto ParseDelimitedFrom(InputStream input
				)
			{
				return Parser.ParseDelimitedFrom(input);
			}

			/// <exception cref="System.IO.IOException"/>
			public static BKJournalProtos.EditLogLedgerProto ParseDelimitedFrom(InputStream input
				, ExtensionRegistryLite extensionRegistry)
			{
				return Parser.ParseDelimitedFrom(input, extensionRegistry);
			}

			/// <exception cref="System.IO.IOException"/>
			public static BKJournalProtos.EditLogLedgerProto ParseFrom(CodedInputStream input
				)
			{
				return Parser.ParseFrom(input);
			}

			/// <exception cref="System.IO.IOException"/>
			public static BKJournalProtos.EditLogLedgerProto ParseFrom(CodedInputStream input
				, ExtensionRegistryLite extensionRegistry)
			{
				return Parser.ParseFrom(input, extensionRegistry);
			}

			public static BKJournalProtos.EditLogLedgerProto.Builder NewBuilder()
			{
				return BKJournalProtos.EditLogLedgerProto.Builder.Create();
			}

			public override MessageLite.Builder NewBuilderForType()
			{
				return NewBuilder();
			}

			public static BKJournalProtos.EditLogLedgerProto.Builder NewBuilder(BKJournalProtos.EditLogLedgerProto
				 prototype)
			{
				return NewBuilder().MergeFrom(prototype);
			}

			public override MessageLite.Builder ToBuilder()
			{
				return NewBuilder(this);
			}

			protected override Message.Builder NewBuilderForType(GeneratedMessage.BuilderParent
				 parent)
			{
				BKJournalProtos.EditLogLedgerProto.Builder builder = new BKJournalProtos.EditLogLedgerProto.Builder
					(parent);
				return builder;
			}

			/// <summary>
			/// Protobuf type
			/// <c>hadoop.hdfs.EditLogLedgerProto</c>
			/// </summary>
			public sealed class Builder : GeneratedMessage.Builder<BKJournalProtos.EditLogLedgerProto.Builder
				>, BKJournalProtos.EditLogLedgerProtoOrBuilder
			{
				public static Descriptors.Descriptor GetDescriptor()
				{
					return BKJournalProtos.internal_static_hadoop_hdfs_EditLogLedgerProto_descriptor;
				}

				protected override GeneratedMessage.FieldAccessorTable InternalGetFieldAccessorTable
					()
				{
					return BKJournalProtos.internal_static_hadoop_hdfs_EditLogLedgerProto_fieldAccessorTable
						.EnsureFieldAccessorsInitialized(typeof(BKJournalProtos.EditLogLedgerProto), typeof(
						BKJournalProtos.EditLogLedgerProto.Builder));
				}

				private Builder()
				{
					// Construct using org.apache.hadoop.contrib.bkjournal.BKJournalProtos.EditLogLedgerProto.newBuilder()
					MaybeForceBuilderInitialization();
				}

				private Builder(GeneratedMessage.BuilderParent parent)
					: base(parent)
				{
					MaybeForceBuilderInitialization();
				}

				private void MaybeForceBuilderInitialization()
				{
					if (GeneratedMessage.alwaysUseFieldBuilders)
					{
					}
				}

				private static BKJournalProtos.EditLogLedgerProto.Builder Create()
				{
					return new BKJournalProtos.EditLogLedgerProto.Builder();
				}

				public override MessageLite.Builder Clear()
				{
					base.Clear();
					dataLayoutVersion_ = 0;
					bitField0_ = (bitField0_ & ~unchecked((int)(0x00000001)));
					ledgerId_ = 0L;
					bitField0_ = (bitField0_ & ~unchecked((int)(0x00000002)));
					firstTxId_ = 0L;
					bitField0_ = (bitField0_ & ~unchecked((int)(0x00000004)));
					lastTxId_ = 0L;
					bitField0_ = (bitField0_ & ~unchecked((int)(0x00000008)));
					return this;
				}

				public override BKJournalProtos.EditLogLedgerProto.Builder Clone()
				{
					return Create().MergeFrom(((BKJournalProtos.EditLogLedgerProto)BuildPartial()));
				}

				public override Descriptors.Descriptor GetDescriptorForType()
				{
					return BKJournalProtos.internal_static_hadoop_hdfs_EditLogLedgerProto_descriptor;
				}

				public override MessageLite GetDefaultInstanceForType()
				{
					return BKJournalProtos.EditLogLedgerProto.GetDefaultInstance();
				}

				public override MessageLite Build()
				{
					BKJournalProtos.EditLogLedgerProto result = ((BKJournalProtos.EditLogLedgerProto)
						BuildPartial());
					if (!result.IsInitialized())
					{
						throw NewUninitializedMessageException(result);
					}
					return result;
				}

				public override MessageLite BuildPartial()
				{
					BKJournalProtos.EditLogLedgerProto result = new BKJournalProtos.EditLogLedgerProto
						(this);
					int from_bitField0_ = bitField0_;
					int to_bitField0_ = 0;
					if (((from_bitField0_ & unchecked((int)(0x00000001))) == unchecked((int)(0x00000001
						))))
					{
						to_bitField0_ |= unchecked((int)(0x00000001));
					}
					result.dataLayoutVersion_ = dataLayoutVersion_;
					if (((from_bitField0_ & unchecked((int)(0x00000002))) == unchecked((int)(0x00000002
						))))
					{
						to_bitField0_ |= unchecked((int)(0x00000002));
					}
					result.ledgerId_ = ledgerId_;
					if (((from_bitField0_ & unchecked((int)(0x00000004))) == unchecked((int)(0x00000004
						))))
					{
						to_bitField0_ |= unchecked((int)(0x00000004));
					}
					result.firstTxId_ = firstTxId_;
					if (((from_bitField0_ & unchecked((int)(0x00000008))) == unchecked((int)(0x00000008
						))))
					{
						to_bitField0_ |= unchecked((int)(0x00000008));
					}
					result.lastTxId_ = lastTxId_;
					result.bitField0_ = to_bitField0_;
					OnBuilt();
					return result;
				}

				public override BKJournalProtos.EditLogLedgerProto.Builder MergeFrom(Message other
					)
				{
					if (other is BKJournalProtos.EditLogLedgerProto)
					{
						return MergeFrom((BKJournalProtos.EditLogLedgerProto)other);
					}
					else
					{
						base.MergeFrom(other);
						return this;
					}
				}

				public BKJournalProtos.EditLogLedgerProto.Builder MergeFrom(BKJournalProtos.EditLogLedgerProto
					 other)
				{
					if (other == BKJournalProtos.EditLogLedgerProto.GetDefaultInstance())
					{
						return this;
					}
					if (other.HasDataLayoutVersion())
					{
						SetDataLayoutVersion(other.GetDataLayoutVersion());
					}
					if (other.HasLedgerId())
					{
						SetLedgerId(other.GetLedgerId());
					}
					if (other.HasFirstTxId())
					{
						SetFirstTxId(other.GetFirstTxId());
					}
					if (other.HasLastTxId())
					{
						SetLastTxId(other.GetLastTxId());
					}
					this.MergeUnknownFields(other.GetUnknownFields());
					return this;
				}

				public sealed override bool IsInitialized()
				{
					if (!HasDataLayoutVersion())
					{
						return false;
					}
					if (!HasLedgerId())
					{
						return false;
					}
					if (!HasFirstTxId())
					{
						return false;
					}
					return true;
				}

				/// <exception cref="System.IO.IOException"/>
				public override BKJournalProtos.EditLogLedgerProto.Builder MergeFrom(CodedInputStream
					 input, ExtensionRegistryLite extensionRegistry)
				{
					BKJournalProtos.EditLogLedgerProto parsedMessage = null;
					try
					{
						parsedMessage = Parser.ParsePartialFrom(input, extensionRegistry);
					}
					catch (InvalidProtocolBufferException e)
					{
						parsedMessage = (BKJournalProtos.EditLogLedgerProto)e.GetUnfinishedMessage();
						throw;
					}
					finally
					{
						if (parsedMessage != null)
						{
							MergeFrom(parsedMessage);
						}
					}
					return this;
				}

				private int bitField0_;

				private int dataLayoutVersion_;

				// required int32 dataLayoutVersion = 1;
				/// <summary><code>required int32 dataLayoutVersion = 1;</code></summary>
				public bool HasDataLayoutVersion()
				{
					return ((bitField0_ & unchecked((int)(0x00000001))) == unchecked((int)(0x00000001
						)));
				}

				/// <summary><code>required int32 dataLayoutVersion = 1;</code></summary>
				public int GetDataLayoutVersion()
				{
					return dataLayoutVersion_;
				}

				/// <summary><code>required int32 dataLayoutVersion = 1;</code></summary>
				public BKJournalProtos.EditLogLedgerProto.Builder SetDataLayoutVersion(int value)
				{
					bitField0_ |= unchecked((int)(0x00000001));
					dataLayoutVersion_ = value;
					OnChanged();
					return this;
				}

				/// <summary><code>required int32 dataLayoutVersion = 1;</code></summary>
				public BKJournalProtos.EditLogLedgerProto.Builder ClearDataLayoutVersion()
				{
					bitField0_ = (bitField0_ & ~unchecked((int)(0x00000001)));
					dataLayoutVersion_ = 0;
					OnChanged();
					return this;
				}

				private long ledgerId_;

				// required int64 ledgerId = 2;
				/// <summary><code>required int64 ledgerId = 2;</code></summary>
				public bool HasLedgerId()
				{
					return ((bitField0_ & unchecked((int)(0x00000002))) == unchecked((int)(0x00000002
						)));
				}

				/// <summary><code>required int64 ledgerId = 2;</code></summary>
				public long GetLedgerId()
				{
					return ledgerId_;
				}

				/// <summary><code>required int64 ledgerId = 2;</code></summary>
				public BKJournalProtos.EditLogLedgerProto.Builder SetLedgerId(long value)
				{
					bitField0_ |= unchecked((int)(0x00000002));
					ledgerId_ = value;
					OnChanged();
					return this;
				}

				/// <summary><code>required int64 ledgerId = 2;</code></summary>
				public BKJournalProtos.EditLogLedgerProto.Builder ClearLedgerId()
				{
					bitField0_ = (bitField0_ & ~unchecked((int)(0x00000002)));
					ledgerId_ = 0L;
					OnChanged();
					return this;
				}

				private long firstTxId_;

				// required int64 firstTxId = 3;
				/// <summary><code>required int64 firstTxId = 3;</code></summary>
				public bool HasFirstTxId()
				{
					return ((bitField0_ & unchecked((int)(0x00000004))) == unchecked((int)(0x00000004
						)));
				}

				/// <summary><code>required int64 firstTxId = 3;</code></summary>
				public long GetFirstTxId()
				{
					return firstTxId_;
				}

				/// <summary><code>required int64 firstTxId = 3;</code></summary>
				public BKJournalProtos.EditLogLedgerProto.Builder SetFirstTxId(long value)
				{
					bitField0_ |= unchecked((int)(0x00000004));
					firstTxId_ = value;
					OnChanged();
					return this;
				}

				/// <summary><code>required int64 firstTxId = 3;</code></summary>
				public BKJournalProtos.EditLogLedgerProto.Builder ClearFirstTxId()
				{
					bitField0_ = (bitField0_ & ~unchecked((int)(0x00000004)));
					firstTxId_ = 0L;
					OnChanged();
					return this;
				}

				private long lastTxId_;

				// optional int64 lastTxId = 4;
				/// <summary><code>optional int64 lastTxId = 4;</code></summary>
				public bool HasLastTxId()
				{
					return ((bitField0_ & unchecked((int)(0x00000008))) == unchecked((int)(0x00000008
						)));
				}

				/// <summary><code>optional int64 lastTxId = 4;</code></summary>
				public long GetLastTxId()
				{
					return lastTxId_;
				}

				/// <summary><code>optional int64 lastTxId = 4;</code></summary>
				public BKJournalProtos.EditLogLedgerProto.Builder SetLastTxId(long value)
				{
					bitField0_ |= unchecked((int)(0x00000008));
					lastTxId_ = value;
					OnChanged();
					return this;
				}

				/// <summary><code>optional int64 lastTxId = 4;</code></summary>
				public BKJournalProtos.EditLogLedgerProto.Builder ClearLastTxId()
				{
					bitField0_ = (bitField0_ & ~unchecked((int)(0x00000008)));
					lastTxId_ = 0L;
					OnChanged();
					return this;
				}
				// @@protoc_insertion_point(builder_scope:hadoop.hdfs.EditLogLedgerProto)
			}

			static EditLogLedgerProto()
			{
				defaultInstance = new BKJournalProtos.EditLogLedgerProto(true);
				defaultInstance.InitFields();
			}
			// @@protoc_insertion_point(class_scope:hadoop.hdfs.EditLogLedgerProto)
		}

		public interface MaxTxIdProtoOrBuilder : MessageOrBuilder
		{
			// required int64 txId = 1;
			/// <summary><code>required int64 txId = 1;</code></summary>
			bool HasTxId();

			/// <summary><code>required int64 txId = 1;</code></summary>
			long GetTxId();
		}

		/// <summary>
		/// Protobuf type
		/// <c>hadoop.hdfs.MaxTxIdProto</c>
		/// </summary>
		[System.Serializable]
		public sealed class MaxTxIdProto : GeneratedMessage, BKJournalProtos.MaxTxIdProtoOrBuilder
		{
			private MaxTxIdProto(GeneratedMessage.Builder<object> builder)
				: base(builder)
			{
				// Use MaxTxIdProto.newBuilder() to construct.
				this.unknownFields = builder.GetUnknownFields();
			}

			private MaxTxIdProto(bool noInit)
			{
				this.unknownFields = UnknownFieldSet.GetDefaultInstance();
			}

			private static readonly BKJournalProtos.MaxTxIdProto defaultInstance;

			public static BKJournalProtos.MaxTxIdProto GetDefaultInstance()
			{
				return defaultInstance;
			}

			public override MessageLite GetDefaultInstanceForType()
			{
				return defaultInstance;
			}

			private readonly UnknownFieldSet unknownFields;

			public sealed override UnknownFieldSet GetUnknownFields()
			{
				return this.unknownFields;
			}

			/// <exception cref="Com.Google.Protobuf.InvalidProtocolBufferException"/>
			private MaxTxIdProto(CodedInputStream input, ExtensionRegistryLite extensionRegistry
				)
			{
				InitFields();
				int mutable_bitField0_ = 0;
				UnknownFieldSet.Builder unknownFields = UnknownFieldSet.NewBuilder();
				try
				{
					bool done = false;
					while (!done)
					{
						int tag = input.ReadTag();
						switch (tag)
						{
							case 0:
							{
								done = true;
								break;
							}

							default:
							{
								if (!ParseUnknownField(input, unknownFields, extensionRegistry, tag))
								{
									done = true;
								}
								break;
							}

							case 8:
							{
								bitField0_ |= unchecked((int)(0x00000001));
								txId_ = input.ReadInt64();
								break;
							}
						}
					}
				}
				catch (InvalidProtocolBufferException e)
				{
					throw e.SetUnfinishedMessage(this);
				}
				catch (IOException e)
				{
					throw new InvalidProtocolBufferException(e.Message).SetUnfinishedMessage(this);
				}
				finally
				{
					this.unknownFields = unknownFields.Build();
					MakeExtensionsImmutable();
				}
			}

			public static Descriptors.Descriptor GetDescriptor()
			{
				return BKJournalProtos.internal_static_hadoop_hdfs_MaxTxIdProto_descriptor;
			}

			protected override GeneratedMessage.FieldAccessorTable InternalGetFieldAccessorTable
				()
			{
				return BKJournalProtos.internal_static_hadoop_hdfs_MaxTxIdProto_fieldAccessorTable
					.EnsureFieldAccessorsInitialized(typeof(BKJournalProtos.MaxTxIdProto), typeof(BKJournalProtos.MaxTxIdProto.Builder
					));
			}

			private sealed class _AbstractParser_1488 : AbstractParser<BKJournalProtos.MaxTxIdProto
				>
			{
				public _AbstractParser_1488()
				{
				}

				/// <exception cref="Com.Google.Protobuf.InvalidProtocolBufferException"/>
				public override BKJournalProtos.MaxTxIdProto ParsePartialFrom(CodedInputStream input
					, ExtensionRegistryLite extensionRegistry)
				{
					return new BKJournalProtos.MaxTxIdProto(input, extensionRegistry);
				}
			}

			public static Parser<BKJournalProtos.MaxTxIdProto> Parser = new _AbstractParser_1488
				();

			public override Parser<MessageLite> GetParserForType()
			{
				return Parser;
			}

			private int bitField0_;

			public const int TxidFieldNumber = 1;

			private long txId_;

			// required int64 txId = 1;
			/// <summary><code>required int64 txId = 1;</code></summary>
			public bool HasTxId()
			{
				return ((bitField0_ & unchecked((int)(0x00000001))) == unchecked((int)(0x00000001
					)));
			}

			/// <summary><code>required int64 txId = 1;</code></summary>
			public long GetTxId()
			{
				return txId_;
			}

			private void InitFields()
			{
				txId_ = 0L;
			}

			private byte memoizedIsInitialized = unchecked((byte)(-1));

			public sealed override bool IsInitialized()
			{
				byte isInitialized = memoizedIsInitialized;
				if (isInitialized != -1)
				{
					return isInitialized == 1;
				}
				if (!HasTxId())
				{
					memoizedIsInitialized = 0;
					return false;
				}
				memoizedIsInitialized = 1;
				return true;
			}

			/// <exception cref="System.IO.IOException"/>
			public override void WriteTo(CodedOutputStream output)
			{
				GetSerializedSize();
				if (((bitField0_ & unchecked((int)(0x00000001))) == unchecked((int)(0x00000001))))
				{
					output.WriteInt64(1, txId_);
				}
				GetUnknownFields().WriteTo(output);
			}

			private int memoizedSerializedSize = -1;

			public override int GetSerializedSize()
			{
				int size = memoizedSerializedSize;
				if (size != -1)
				{
					return size;
				}
				size = 0;
				if (((bitField0_ & unchecked((int)(0x00000001))) == unchecked((int)(0x00000001))))
				{
					size += CodedOutputStream.ComputeInt64Size(1, txId_);
				}
				size += GetUnknownFields().GetSerializedSize();
				memoizedSerializedSize = size;
				return size;
			}

			private const long serialVersionUID = 0L;

			/// <exception cref="System.IO.ObjectStreamException"/>
			protected override object WriteReplace()
			{
				return base.WriteReplace();
			}

			public override bool Equals(object obj)
			{
				if (obj == this)
				{
					return true;
				}
				if (!(obj is BKJournalProtos.MaxTxIdProto))
				{
					return base.Equals(obj);
				}
				BKJournalProtos.MaxTxIdProto other = (BKJournalProtos.MaxTxIdProto)obj;
				bool result = true;
				result = result && (HasTxId() == other.HasTxId());
				if (HasTxId())
				{
					result = result && (GetTxId() == other.GetTxId());
				}
				result = result && GetUnknownFields().Equals(other.GetUnknownFields());
				return result;
			}

			private int memoizedHashCode = 0;

			public override int GetHashCode()
			{
				if (memoizedHashCode != 0)
				{
					return memoizedHashCode;
				}
				int hash = 41;
				hash = (19 * hash) + GetDescriptorForType().GetHashCode();
				if (HasTxId())
				{
					hash = (37 * hash) + TxidFieldNumber;
					hash = (53 * hash) + HashLong(GetTxId());
				}
				hash = (29 * hash) + GetUnknownFields().GetHashCode();
				memoizedHashCode = hash;
				return hash;
			}

			/// <exception cref="Com.Google.Protobuf.InvalidProtocolBufferException"/>
			public static BKJournalProtos.MaxTxIdProto ParseFrom(ByteString data)
			{
				return Parser.ParseFrom(data);
			}

			/// <exception cref="Com.Google.Protobuf.InvalidProtocolBufferException"/>
			public static BKJournalProtos.MaxTxIdProto ParseFrom(ByteString data, ExtensionRegistryLite
				 extensionRegistry)
			{
				return Parser.ParseFrom(data, extensionRegistry);
			}

			/// <exception cref="Com.Google.Protobuf.InvalidProtocolBufferException"/>
			public static BKJournalProtos.MaxTxIdProto ParseFrom(byte[] data)
			{
				return Parser.ParseFrom(data);
			}

			/// <exception cref="Com.Google.Protobuf.InvalidProtocolBufferException"/>
			public static BKJournalProtos.MaxTxIdProto ParseFrom(byte[] data, ExtensionRegistryLite
				 extensionRegistry)
			{
				return Parser.ParseFrom(data, extensionRegistry);
			}

			/// <exception cref="System.IO.IOException"/>
			public static BKJournalProtos.MaxTxIdProto ParseFrom(InputStream input)
			{
				return Parser.ParseFrom(input);
			}

			/// <exception cref="System.IO.IOException"/>
			public static BKJournalProtos.MaxTxIdProto ParseFrom(InputStream input, ExtensionRegistryLite
				 extensionRegistry)
			{
				return Parser.ParseFrom(input, extensionRegistry);
			}

			/// <exception cref="System.IO.IOException"/>
			public static BKJournalProtos.MaxTxIdProto ParseDelimitedFrom(InputStream input)
			{
				return Parser.ParseDelimitedFrom(input);
			}

			/// <exception cref="System.IO.IOException"/>
			public static BKJournalProtos.MaxTxIdProto ParseDelimitedFrom(InputStream input, 
				ExtensionRegistryLite extensionRegistry)
			{
				return Parser.ParseDelimitedFrom(input, extensionRegistry);
			}

			/// <exception cref="System.IO.IOException"/>
			public static BKJournalProtos.MaxTxIdProto ParseFrom(CodedInputStream input)
			{
				return Parser.ParseFrom(input);
			}

			/// <exception cref="System.IO.IOException"/>
			public static BKJournalProtos.MaxTxIdProto ParseFrom(CodedInputStream input, ExtensionRegistryLite
				 extensionRegistry)
			{
				return Parser.ParseFrom(input, extensionRegistry);
			}

			public static BKJournalProtos.MaxTxIdProto.Builder NewBuilder()
			{
				return BKJournalProtos.MaxTxIdProto.Builder.Create();
			}

			public override MessageLite.Builder NewBuilderForType()
			{
				return NewBuilder();
			}

			public static BKJournalProtos.MaxTxIdProto.Builder NewBuilder(BKJournalProtos.MaxTxIdProto
				 prototype)
			{
				return NewBuilder().MergeFrom(prototype);
			}

			public override MessageLite.Builder ToBuilder()
			{
				return NewBuilder(this);
			}

			protected override Message.Builder NewBuilderForType(GeneratedMessage.BuilderParent
				 parent)
			{
				BKJournalProtos.MaxTxIdProto.Builder builder = new BKJournalProtos.MaxTxIdProto.Builder
					(parent);
				return builder;
			}

			/// <summary>
			/// Protobuf type
			/// <c>hadoop.hdfs.MaxTxIdProto</c>
			/// </summary>
			public sealed class Builder : GeneratedMessage.Builder<BKJournalProtos.MaxTxIdProto.Builder
				>, BKJournalProtos.MaxTxIdProtoOrBuilder
			{
				public static Descriptors.Descriptor GetDescriptor()
				{
					return BKJournalProtos.internal_static_hadoop_hdfs_MaxTxIdProto_descriptor;
				}

				protected override GeneratedMessage.FieldAccessorTable InternalGetFieldAccessorTable
					()
				{
					return BKJournalProtos.internal_static_hadoop_hdfs_MaxTxIdProto_fieldAccessorTable
						.EnsureFieldAccessorsInitialized(typeof(BKJournalProtos.MaxTxIdProto), typeof(BKJournalProtos.MaxTxIdProto.Builder
						));
				}

				private Builder()
				{
					// Construct using org.apache.hadoop.contrib.bkjournal.BKJournalProtos.MaxTxIdProto.newBuilder()
					MaybeForceBuilderInitialization();
				}

				private Builder(GeneratedMessage.BuilderParent parent)
					: base(parent)
				{
					MaybeForceBuilderInitialization();
				}

				private void MaybeForceBuilderInitialization()
				{
					if (GeneratedMessage.alwaysUseFieldBuilders)
					{
					}
				}

				private static BKJournalProtos.MaxTxIdProto.Builder Create()
				{
					return new BKJournalProtos.MaxTxIdProto.Builder();
				}

				public override MessageLite.Builder Clear()
				{
					base.Clear();
					txId_ = 0L;
					bitField0_ = (bitField0_ & ~unchecked((int)(0x00000001)));
					return this;
				}

				public override BKJournalProtos.MaxTxIdProto.Builder Clone()
				{
					return Create().MergeFrom(((BKJournalProtos.MaxTxIdProto)BuildPartial()));
				}

				public override Descriptors.Descriptor GetDescriptorForType()
				{
					return BKJournalProtos.internal_static_hadoop_hdfs_MaxTxIdProto_descriptor;
				}

				public override MessageLite GetDefaultInstanceForType()
				{
					return BKJournalProtos.MaxTxIdProto.GetDefaultInstance();
				}

				public override MessageLite Build()
				{
					BKJournalProtos.MaxTxIdProto result = ((BKJournalProtos.MaxTxIdProto)BuildPartial
						());
					if (!result.IsInitialized())
					{
						throw NewUninitializedMessageException(result);
					}
					return result;
				}

				public override MessageLite BuildPartial()
				{
					BKJournalProtos.MaxTxIdProto result = new BKJournalProtos.MaxTxIdProto(this);
					int from_bitField0_ = bitField0_;
					int to_bitField0_ = 0;
					if (((from_bitField0_ & unchecked((int)(0x00000001))) == unchecked((int)(0x00000001
						))))
					{
						to_bitField0_ |= unchecked((int)(0x00000001));
					}
					result.txId_ = txId_;
					result.bitField0_ = to_bitField0_;
					OnBuilt();
					return result;
				}

				public override BKJournalProtos.MaxTxIdProto.Builder MergeFrom(Message other)
				{
					if (other is BKJournalProtos.MaxTxIdProto)
					{
						return MergeFrom((BKJournalProtos.MaxTxIdProto)other);
					}
					else
					{
						base.MergeFrom(other);
						return this;
					}
				}

				public BKJournalProtos.MaxTxIdProto.Builder MergeFrom(BKJournalProtos.MaxTxIdProto
					 other)
				{
					if (other == BKJournalProtos.MaxTxIdProto.GetDefaultInstance())
					{
						return this;
					}
					if (other.HasTxId())
					{
						SetTxId(other.GetTxId());
					}
					this.MergeUnknownFields(other.GetUnknownFields());
					return this;
				}

				public sealed override bool IsInitialized()
				{
					if (!HasTxId())
					{
						return false;
					}
					return true;
				}

				/// <exception cref="System.IO.IOException"/>
				public override BKJournalProtos.MaxTxIdProto.Builder MergeFrom(CodedInputStream input
					, ExtensionRegistryLite extensionRegistry)
				{
					BKJournalProtos.MaxTxIdProto parsedMessage = null;
					try
					{
						parsedMessage = Parser.ParsePartialFrom(input, extensionRegistry);
					}
					catch (InvalidProtocolBufferException e)
					{
						parsedMessage = (BKJournalProtos.MaxTxIdProto)e.GetUnfinishedMessage();
						throw;
					}
					finally
					{
						if (parsedMessage != null)
						{
							MergeFrom(parsedMessage);
						}
					}
					return this;
				}

				private int bitField0_;

				private long txId_;

				// required int64 txId = 1;
				/// <summary><code>required int64 txId = 1;</code></summary>
				public bool HasTxId()
				{
					return ((bitField0_ & unchecked((int)(0x00000001))) == unchecked((int)(0x00000001
						)));
				}

				/// <summary><code>required int64 txId = 1;</code></summary>
				public long GetTxId()
				{
					return txId_;
				}

				/// <summary><code>required int64 txId = 1;</code></summary>
				public BKJournalProtos.MaxTxIdProto.Builder SetTxId(long value)
				{
					bitField0_ |= unchecked((int)(0x00000001));
					txId_ = value;
					OnChanged();
					return this;
				}

				/// <summary><code>required int64 txId = 1;</code></summary>
				public BKJournalProtos.MaxTxIdProto.Builder ClearTxId()
				{
					bitField0_ = (bitField0_ & ~unchecked((int)(0x00000001)));
					txId_ = 0L;
					OnChanged();
					return this;
				}
				// @@protoc_insertion_point(builder_scope:hadoop.hdfs.MaxTxIdProto)
			}

			static MaxTxIdProto()
			{
				defaultInstance = new BKJournalProtos.MaxTxIdProto(true);
				defaultInstance.InitFields();
			}
			// @@protoc_insertion_point(class_scope:hadoop.hdfs.MaxTxIdProto)
		}

		public interface CurrentInprogressProtoOrBuilder : MessageOrBuilder
		{
			// required string path = 1;
			/// <summary><code>required string path = 1;</code></summary>
			bool HasPath();

			/// <summary><code>required string path = 1;</code></summary>
			string GetPath();

			/// <summary><code>required string path = 1;</code></summary>
			ByteString GetPathBytes();

			// optional string hostname = 2;
			/// <summary><code>optional string hostname = 2;</code></summary>
			bool HasHostname();

			/// <summary><code>optional string hostname = 2;</code></summary>
			string GetHostname();

			/// <summary><code>optional string hostname = 2;</code></summary>
			ByteString GetHostnameBytes();
		}

		/// <summary>
		/// Protobuf type
		/// <c>hadoop.hdfs.CurrentInprogressProto</c>
		/// </summary>
		[System.Serializable]
		public sealed class CurrentInprogressProto : GeneratedMessage, BKJournalProtos.CurrentInprogressProtoOrBuilder
		{
			private CurrentInprogressProto(GeneratedMessage.Builder<object> builder)
				: base(builder)
			{
				// Use CurrentInprogressProto.newBuilder() to construct.
				this.unknownFields = builder.GetUnknownFields();
			}

			private CurrentInprogressProto(bool noInit)
			{
				this.unknownFields = UnknownFieldSet.GetDefaultInstance();
			}

			private static readonly BKJournalProtos.CurrentInprogressProto defaultInstance;

			public static BKJournalProtos.CurrentInprogressProto GetDefaultInstance()
			{
				return defaultInstance;
			}

			public override MessageLite GetDefaultInstanceForType()
			{
				return defaultInstance;
			}

			private readonly UnknownFieldSet unknownFields;

			public sealed override UnknownFieldSet GetUnknownFields()
			{
				return this.unknownFields;
			}

			/// <exception cref="Com.Google.Protobuf.InvalidProtocolBufferException"/>
			private CurrentInprogressProto(CodedInputStream input, ExtensionRegistryLite extensionRegistry
				)
			{
				InitFields();
				int mutable_bitField0_ = 0;
				UnknownFieldSet.Builder unknownFields = UnknownFieldSet.NewBuilder();
				try
				{
					bool done = false;
					while (!done)
					{
						int tag = input.ReadTag();
						switch (tag)
						{
							case 0:
							{
								done = true;
								break;
							}

							default:
							{
								if (!ParseUnknownField(input, unknownFields, extensionRegistry, tag))
								{
									done = true;
								}
								break;
							}

							case 10:
							{
								bitField0_ |= unchecked((int)(0x00000001));
								path_ = input.ReadBytes();
								break;
							}

							case 18:
							{
								bitField0_ |= unchecked((int)(0x00000002));
								hostname_ = input.ReadBytes();
								break;
							}
						}
					}
				}
				catch (InvalidProtocolBufferException e)
				{
					throw e.SetUnfinishedMessage(this);
				}
				catch (IOException e)
				{
					throw new InvalidProtocolBufferException(e.Message).SetUnfinishedMessage(this);
				}
				finally
				{
					this.unknownFields = unknownFields.Build();
					MakeExtensionsImmutable();
				}
			}

			public static Descriptors.Descriptor GetDescriptor()
			{
				return BKJournalProtos.internal_static_hadoop_hdfs_CurrentInprogressProto_descriptor;
			}

			protected override GeneratedMessage.FieldAccessorTable InternalGetFieldAccessorTable
				()
			{
				return BKJournalProtos.internal_static_hadoop_hdfs_CurrentInprogressProto_fieldAccessorTable
					.EnsureFieldAccessorsInitialized(typeof(BKJournalProtos.CurrentInprogressProto), 
					typeof(BKJournalProtos.CurrentInprogressProto.Builder));
			}

			private sealed class _AbstractParser_1955 : AbstractParser<BKJournalProtos.CurrentInprogressProto
				>
			{
				public _AbstractParser_1955()
				{
				}

				/// <exception cref="Com.Google.Protobuf.InvalidProtocolBufferException"/>
				public override BKJournalProtos.CurrentInprogressProto ParsePartialFrom(CodedInputStream
					 input, ExtensionRegistryLite extensionRegistry)
				{
					return new BKJournalProtos.CurrentInprogressProto(input, extensionRegistry);
				}
			}

			public static Parser<BKJournalProtos.CurrentInprogressProto> Parser = new _AbstractParser_1955
				();

			public override Parser<MessageLite> GetParserForType()
			{
				return Parser;
			}

			private int bitField0_;

			public const int PathFieldNumber = 1;

			private object path_;

			// required string path = 1;
			/// <summary><code>required string path = 1;</code></summary>
			public bool HasPath()
			{
				return ((bitField0_ & unchecked((int)(0x00000001))) == unchecked((int)(0x00000001
					)));
			}

			/// <summary><code>required string path = 1;</code></summary>
			public string GetPath()
			{
				object @ref = path_;
				if (@ref is string)
				{
					return (string)@ref;
				}
				else
				{
					ByteString bs = (ByteString)@ref;
					string s = bs.ToStringUtf8();
					if (bs.IsValidUtf8())
					{
						path_ = s;
					}
					return s;
				}
			}

			/// <summary><code>required string path = 1;</code></summary>
			public ByteString GetPathBytes()
			{
				object @ref = path_;
				if (@ref is string)
				{
					ByteString b = ByteString.CopyFromUtf8((string)@ref);
					path_ = b;
					return b;
				}
				else
				{
					return (ByteString)@ref;
				}
			}

			public const int HostnameFieldNumber = 2;

			private object hostname_;

			// optional string hostname = 2;
			/// <summary><code>optional string hostname = 2;</code></summary>
			public bool HasHostname()
			{
				return ((bitField0_ & unchecked((int)(0x00000002))) == unchecked((int)(0x00000002
					)));
			}

			/// <summary><code>optional string hostname = 2;</code></summary>
			public string GetHostname()
			{
				object @ref = hostname_;
				if (@ref is string)
				{
					return (string)@ref;
				}
				else
				{
					ByteString bs = (ByteString)@ref;
					string s = bs.ToStringUtf8();
					if (bs.IsValidUtf8())
					{
						hostname_ = s;
					}
					return s;
				}
			}

			/// <summary><code>optional string hostname = 2;</code></summary>
			public ByteString GetHostnameBytes()
			{
				object @ref = hostname_;
				if (@ref is string)
				{
					ByteString b = ByteString.CopyFromUtf8((string)@ref);
					hostname_ = b;
					return b;
				}
				else
				{
					return (ByteString)@ref;
				}
			}

			private void InitFields()
			{
				path_ = string.Empty;
				hostname_ = string.Empty;
			}

			private byte memoizedIsInitialized = unchecked((byte)(-1));

			public sealed override bool IsInitialized()
			{
				byte isInitialized = memoizedIsInitialized;
				if (isInitialized != -1)
				{
					return isInitialized == 1;
				}
				if (!HasPath())
				{
					memoizedIsInitialized = 0;
					return false;
				}
				memoizedIsInitialized = 1;
				return true;
			}

			/// <exception cref="System.IO.IOException"/>
			public override void WriteTo(CodedOutputStream output)
			{
				GetSerializedSize();
				if (((bitField0_ & unchecked((int)(0x00000001))) == unchecked((int)(0x00000001))))
				{
					output.WriteBytes(1, GetPathBytes());
				}
				if (((bitField0_ & unchecked((int)(0x00000002))) == unchecked((int)(0x00000002))))
				{
					output.WriteBytes(2, GetHostnameBytes());
				}
				GetUnknownFields().WriteTo(output);
			}

			private int memoizedSerializedSize = -1;

			public override int GetSerializedSize()
			{
				int size = memoizedSerializedSize;
				if (size != -1)
				{
					return size;
				}
				size = 0;
				if (((bitField0_ & unchecked((int)(0x00000001))) == unchecked((int)(0x00000001))))
				{
					size += CodedOutputStream.ComputeBytesSize(1, GetPathBytes());
				}
				if (((bitField0_ & unchecked((int)(0x00000002))) == unchecked((int)(0x00000002))))
				{
					size += CodedOutputStream.ComputeBytesSize(2, GetHostnameBytes());
				}
				size += GetUnknownFields().GetSerializedSize();
				memoizedSerializedSize = size;
				return size;
			}

			private const long serialVersionUID = 0L;

			/// <exception cref="System.IO.ObjectStreamException"/>
			protected override object WriteReplace()
			{
				return base.WriteReplace();
			}

			public override bool Equals(object obj)
			{
				if (obj == this)
				{
					return true;
				}
				if (!(obj is BKJournalProtos.CurrentInprogressProto))
				{
					return base.Equals(obj);
				}
				BKJournalProtos.CurrentInprogressProto other = (BKJournalProtos.CurrentInprogressProto
					)obj;
				bool result = true;
				result = result && (HasPath() == other.HasPath());
				if (HasPath())
				{
					result = result && GetPath().Equals(other.GetPath());
				}
				result = result && (HasHostname() == other.HasHostname());
				if (HasHostname())
				{
					result = result && GetHostname().Equals(other.GetHostname());
				}
				result = result && GetUnknownFields().Equals(other.GetUnknownFields());
				return result;
			}

			private int memoizedHashCode = 0;

			public override int GetHashCode()
			{
				if (memoizedHashCode != 0)
				{
					return memoizedHashCode;
				}
				int hash = 41;
				hash = (19 * hash) + GetDescriptorForType().GetHashCode();
				if (HasPath())
				{
					hash = (37 * hash) + PathFieldNumber;
					hash = (53 * hash) + GetPath().GetHashCode();
				}
				if (HasHostname())
				{
					hash = (37 * hash) + HostnameFieldNumber;
					hash = (53 * hash) + GetHostname().GetHashCode();
				}
				hash = (29 * hash) + GetUnknownFields().GetHashCode();
				memoizedHashCode = hash;
				return hash;
			}

			/// <exception cref="Com.Google.Protobuf.InvalidProtocolBufferException"/>
			public static BKJournalProtos.CurrentInprogressProto ParseFrom(ByteString data)
			{
				return Parser.ParseFrom(data);
			}

			/// <exception cref="Com.Google.Protobuf.InvalidProtocolBufferException"/>
			public static BKJournalProtos.CurrentInprogressProto ParseFrom(ByteString data, ExtensionRegistryLite
				 extensionRegistry)
			{
				return Parser.ParseFrom(data, extensionRegistry);
			}

			/// <exception cref="Com.Google.Protobuf.InvalidProtocolBufferException"/>
			public static BKJournalProtos.CurrentInprogressProto ParseFrom(byte[] data)
			{
				return Parser.ParseFrom(data);
			}

			/// <exception cref="Com.Google.Protobuf.InvalidProtocolBufferException"/>
			public static BKJournalProtos.CurrentInprogressProto ParseFrom(byte[] data, ExtensionRegistryLite
				 extensionRegistry)
			{
				return Parser.ParseFrom(data, extensionRegistry);
			}

			/// <exception cref="System.IO.IOException"/>
			public static BKJournalProtos.CurrentInprogressProto ParseFrom(InputStream input)
			{
				return Parser.ParseFrom(input);
			}

			/// <exception cref="System.IO.IOException"/>
			public static BKJournalProtos.CurrentInprogressProto ParseFrom(InputStream input, 
				ExtensionRegistryLite extensionRegistry)
			{
				return Parser.ParseFrom(input, extensionRegistry);
			}

			/// <exception cref="System.IO.IOException"/>
			public static BKJournalProtos.CurrentInprogressProto ParseDelimitedFrom(InputStream
				 input)
			{
				return Parser.ParseDelimitedFrom(input);
			}

			/// <exception cref="System.IO.IOException"/>
			public static BKJournalProtos.CurrentInprogressProto ParseDelimitedFrom(InputStream
				 input, ExtensionRegistryLite extensionRegistry)
			{
				return Parser.ParseDelimitedFrom(input, extensionRegistry);
			}

			/// <exception cref="System.IO.IOException"/>
			public static BKJournalProtos.CurrentInprogressProto ParseFrom(CodedInputStream input
				)
			{
				return Parser.ParseFrom(input);
			}

			/// <exception cref="System.IO.IOException"/>
			public static BKJournalProtos.CurrentInprogressProto ParseFrom(CodedInputStream input
				, ExtensionRegistryLite extensionRegistry)
			{
				return Parser.ParseFrom(input, extensionRegistry);
			}

			public static BKJournalProtos.CurrentInprogressProto.Builder NewBuilder()
			{
				return BKJournalProtos.CurrentInprogressProto.Builder.Create();
			}

			public override MessageLite.Builder NewBuilderForType()
			{
				return NewBuilder();
			}

			public static BKJournalProtos.CurrentInprogressProto.Builder NewBuilder(BKJournalProtos.CurrentInprogressProto
				 prototype)
			{
				return NewBuilder().MergeFrom(prototype);
			}

			public override MessageLite.Builder ToBuilder()
			{
				return NewBuilder(this);
			}

			protected override Message.Builder NewBuilderForType(GeneratedMessage.BuilderParent
				 parent)
			{
				BKJournalProtos.CurrentInprogressProto.Builder builder = new BKJournalProtos.CurrentInprogressProto.Builder
					(parent);
				return builder;
			}

			/// <summary>
			/// Protobuf type
			/// <c>hadoop.hdfs.CurrentInprogressProto</c>
			/// </summary>
			public sealed class Builder : GeneratedMessage.Builder<BKJournalProtos.CurrentInprogressProto.Builder
				>, BKJournalProtos.CurrentInprogressProtoOrBuilder
			{
				public static Descriptors.Descriptor GetDescriptor()
				{
					return BKJournalProtos.internal_static_hadoop_hdfs_CurrentInprogressProto_descriptor;
				}

				protected override GeneratedMessage.FieldAccessorTable InternalGetFieldAccessorTable
					()
				{
					return BKJournalProtos.internal_static_hadoop_hdfs_CurrentInprogressProto_fieldAccessorTable
						.EnsureFieldAccessorsInitialized(typeof(BKJournalProtos.CurrentInprogressProto), 
						typeof(BKJournalProtos.CurrentInprogressProto.Builder));
				}

				private Builder()
				{
					// Construct using org.apache.hadoop.contrib.bkjournal.BKJournalProtos.CurrentInprogressProto.newBuilder()
					MaybeForceBuilderInitialization();
				}

				private Builder(GeneratedMessage.BuilderParent parent)
					: base(parent)
				{
					MaybeForceBuilderInitialization();
				}

				private void MaybeForceBuilderInitialization()
				{
					if (GeneratedMessage.alwaysUseFieldBuilders)
					{
					}
				}

				private static BKJournalProtos.CurrentInprogressProto.Builder Create()
				{
					return new BKJournalProtos.CurrentInprogressProto.Builder();
				}

				public override MessageLite.Builder Clear()
				{
					base.Clear();
					path_ = string.Empty;
					bitField0_ = (bitField0_ & ~unchecked((int)(0x00000001)));
					hostname_ = string.Empty;
					bitField0_ = (bitField0_ & ~unchecked((int)(0x00000002)));
					return this;
				}

				public override BKJournalProtos.CurrentInprogressProto.Builder Clone()
				{
					return Create().MergeFrom(((BKJournalProtos.CurrentInprogressProto)BuildPartial()
						));
				}

				public override Descriptors.Descriptor GetDescriptorForType()
				{
					return BKJournalProtos.internal_static_hadoop_hdfs_CurrentInprogressProto_descriptor;
				}

				public override MessageLite GetDefaultInstanceForType()
				{
					return BKJournalProtos.CurrentInprogressProto.GetDefaultInstance();
				}

				public override MessageLite Build()
				{
					BKJournalProtos.CurrentInprogressProto result = ((BKJournalProtos.CurrentInprogressProto
						)BuildPartial());
					if (!result.IsInitialized())
					{
						throw NewUninitializedMessageException(result);
					}
					return result;
				}

				public override MessageLite BuildPartial()
				{
					BKJournalProtos.CurrentInprogressProto result = new BKJournalProtos.CurrentInprogressProto
						(this);
					int from_bitField0_ = bitField0_;
					int to_bitField0_ = 0;
					if (((from_bitField0_ & unchecked((int)(0x00000001))) == unchecked((int)(0x00000001
						))))
					{
						to_bitField0_ |= unchecked((int)(0x00000001));
					}
					result.path_ = path_;
					if (((from_bitField0_ & unchecked((int)(0x00000002))) == unchecked((int)(0x00000002
						))))
					{
						to_bitField0_ |= unchecked((int)(0x00000002));
					}
					result.hostname_ = hostname_;
					result.bitField0_ = to_bitField0_;
					OnBuilt();
					return result;
				}

				public override BKJournalProtos.CurrentInprogressProto.Builder MergeFrom(Message 
					other)
				{
					if (other is BKJournalProtos.CurrentInprogressProto)
					{
						return MergeFrom((BKJournalProtos.CurrentInprogressProto)other);
					}
					else
					{
						base.MergeFrom(other);
						return this;
					}
				}

				public BKJournalProtos.CurrentInprogressProto.Builder MergeFrom(BKJournalProtos.CurrentInprogressProto
					 other)
				{
					if (other == BKJournalProtos.CurrentInprogressProto.GetDefaultInstance())
					{
						return this;
					}
					if (other.HasPath())
					{
						bitField0_ |= unchecked((int)(0x00000001));
						path_ = other.path_;
						OnChanged();
					}
					if (other.HasHostname())
					{
						bitField0_ |= unchecked((int)(0x00000002));
						hostname_ = other.hostname_;
						OnChanged();
					}
					this.MergeUnknownFields(other.GetUnknownFields());
					return this;
				}

				public sealed override bool IsInitialized()
				{
					if (!HasPath())
					{
						return false;
					}
					return true;
				}

				/// <exception cref="System.IO.IOException"/>
				public override BKJournalProtos.CurrentInprogressProto.Builder MergeFrom(CodedInputStream
					 input, ExtensionRegistryLite extensionRegistry)
				{
					BKJournalProtos.CurrentInprogressProto parsedMessage = null;
					try
					{
						parsedMessage = Parser.ParsePartialFrom(input, extensionRegistry);
					}
					catch (InvalidProtocolBufferException e)
					{
						parsedMessage = (BKJournalProtos.CurrentInprogressProto)e.GetUnfinishedMessage();
						throw;
					}
					finally
					{
						if (parsedMessage != null)
						{
							MergeFrom(parsedMessage);
						}
					}
					return this;
				}

				private int bitField0_;

				private object path_ = string.Empty;

				// required string path = 1;
				/// <summary><code>required string path = 1;</code></summary>
				public bool HasPath()
				{
					return ((bitField0_ & unchecked((int)(0x00000001))) == unchecked((int)(0x00000001
						)));
				}

				/// <summary><code>required string path = 1;</code></summary>
				public string GetPath()
				{
					object @ref = path_;
					if (!(@ref is string))
					{
						string s = ((ByteString)@ref).ToStringUtf8();
						path_ = s;
						return s;
					}
					else
					{
						return (string)@ref;
					}
				}

				/// <summary><code>required string path = 1;</code></summary>
				public ByteString GetPathBytes()
				{
					object @ref = path_;
					if (@ref is string)
					{
						ByteString b = ByteString.CopyFromUtf8((string)@ref);
						path_ = b;
						return b;
					}
					else
					{
						return (ByteString)@ref;
					}
				}

				/// <summary><code>required string path = 1;</code></summary>
				public BKJournalProtos.CurrentInprogressProto.Builder SetPath(string value)
				{
					if (value == null)
					{
						throw new ArgumentNullException();
					}
					bitField0_ |= unchecked((int)(0x00000001));
					path_ = value;
					OnChanged();
					return this;
				}

				/// <summary><code>required string path = 1;</code></summary>
				public BKJournalProtos.CurrentInprogressProto.Builder ClearPath()
				{
					bitField0_ = (bitField0_ & ~unchecked((int)(0x00000001)));
					path_ = GetDefaultInstance().GetPath();
					OnChanged();
					return this;
				}

				/// <summary><code>required string path = 1;</code></summary>
				public BKJournalProtos.CurrentInprogressProto.Builder SetPathBytes(ByteString value
					)
				{
					if (value == null)
					{
						throw new ArgumentNullException();
					}
					bitField0_ |= unchecked((int)(0x00000001));
					path_ = value;
					OnChanged();
					return this;
				}

				private object hostname_ = string.Empty;

				// optional string hostname = 2;
				/// <summary><code>optional string hostname = 2;</code></summary>
				public bool HasHostname()
				{
					return ((bitField0_ & unchecked((int)(0x00000002))) == unchecked((int)(0x00000002
						)));
				}

				/// <summary><code>optional string hostname = 2;</code></summary>
				public string GetHostname()
				{
					object @ref = hostname_;
					if (!(@ref is string))
					{
						string s = ((ByteString)@ref).ToStringUtf8();
						hostname_ = s;
						return s;
					}
					else
					{
						return (string)@ref;
					}
				}

				/// <summary><code>optional string hostname = 2;</code></summary>
				public ByteString GetHostnameBytes()
				{
					object @ref = hostname_;
					if (@ref is string)
					{
						ByteString b = ByteString.CopyFromUtf8((string)@ref);
						hostname_ = b;
						return b;
					}
					else
					{
						return (ByteString)@ref;
					}
				}

				/// <summary><code>optional string hostname = 2;</code></summary>
				public BKJournalProtos.CurrentInprogressProto.Builder SetHostname(string value)
				{
					if (value == null)
					{
						throw new ArgumentNullException();
					}
					bitField0_ |= unchecked((int)(0x00000002));
					hostname_ = value;
					OnChanged();
					return this;
				}

				/// <summary><code>optional string hostname = 2;</code></summary>
				public BKJournalProtos.CurrentInprogressProto.Builder ClearHostname()
				{
					bitField0_ = (bitField0_ & ~unchecked((int)(0x00000002)));
					hostname_ = GetDefaultInstance().GetHostname();
					OnChanged();
					return this;
				}

				/// <summary><code>optional string hostname = 2;</code></summary>
				public BKJournalProtos.CurrentInprogressProto.Builder SetHostnameBytes(ByteString
					 value)
				{
					if (value == null)
					{
						throw new ArgumentNullException();
					}
					bitField0_ |= unchecked((int)(0x00000002));
					hostname_ = value;
					OnChanged();
					return this;
				}
				// @@protoc_insertion_point(builder_scope:hadoop.hdfs.CurrentInprogressProto)
			}

			static CurrentInprogressProto()
			{
				defaultInstance = new BKJournalProtos.CurrentInprogressProto(true);
				defaultInstance.InitFields();
			}
			// @@protoc_insertion_point(class_scope:hadoop.hdfs.CurrentInprogressProto)
		}

		private static Descriptors.Descriptor internal_static_hadoop_hdfs_VersionProto_descriptor;

		private static GeneratedMessage.FieldAccessorTable internal_static_hadoop_hdfs_VersionProto_fieldAccessorTable;

		private static Descriptors.Descriptor internal_static_hadoop_hdfs_EditLogLedgerProto_descriptor;

		private static GeneratedMessage.FieldAccessorTable internal_static_hadoop_hdfs_EditLogLedgerProto_fieldAccessorTable;

		private static Descriptors.Descriptor internal_static_hadoop_hdfs_MaxTxIdProto_descriptor;

		private static GeneratedMessage.FieldAccessorTable internal_static_hadoop_hdfs_MaxTxIdProto_fieldAccessorTable;

		private static Descriptors.Descriptor internal_static_hadoop_hdfs_CurrentInprogressProto_descriptor;

		private static GeneratedMessage.FieldAccessorTable internal_static_hadoop_hdfs_CurrentInprogressProto_fieldAccessorTable;

		public static Descriptors.FileDescriptor GetDescriptor()
		{
			return descriptor;
		}

		private static Descriptors.FileDescriptor descriptor;

		static BKJournalProtos()
		{
			string[] descriptorData = new string[] { "\n\x11bkjournal.proto\x16\xdhadoop.hdfs\x20\nhdfs.pro"
				 + "to\"]\n\xeVersionProto\x16\x19\n\rlayoutVersion\x1e\x1 \x2(" + "\x5\xe2\n\rnamespaceInfo\x1e\x2 \x1(\x84\x25.hadoop.hdfs.N"
				 + "amespaceInfoProto\"f\n\x16EditLogLedgerProto\x16" + "\x1f\n\x15dataLayoutVersion\x1e\x1 \x2(\x5\x16\x14\n\xaledgerId\x1e\x2"
				 + " \x2(\x3\x16\x15\n\tfirstTxId\x1e\x3 \x2(\x3\x16\x14\n\xalastTxId\x1e\x4 \x1("
				 + "\x3\"\x22\n\xeMaxTxIdProto\x16\xe\n\x4txId\x1e\x1 \x2(\x3\"8\n\x1aCurre" + "ntInprogressProto\x16\xe\n\x4path\x1e\x1 \x2(\t\x16\x14\n\xahostn"
				 + "ame\x1e\x2 \x1(\tB9\n#org.apache.hadoop.contrib.b" + "kjournalB\x11BKJournalProtos\xf0\x1\x1"
				 };
			Descriptors.FileDescriptor.InternalDescriptorAssigner assigner = new _InternalDescriptorAssigner_2559
				();
			Descriptors.FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData, new Descriptors.FileDescriptor
				[] { HdfsProtos.GetDescriptor() }, assigner);
		}

		private sealed class _InternalDescriptorAssigner_2559 : Descriptors.FileDescriptor.InternalDescriptorAssigner
		{
			public _InternalDescriptorAssigner_2559()
			{
			}

			public ExtensionRegistry AssignDescriptors(Descriptors.FileDescriptor root)
			{
				BKJournalProtos.descriptor = root;
				BKJournalProtos.internal_static_hadoop_hdfs_VersionProto_descriptor = BKJournalProtos
					.GetDescriptor().GetMessageTypes()[0];
				BKJournalProtos.internal_static_hadoop_hdfs_VersionProto_fieldAccessorTable = new 
					GeneratedMessage.FieldAccessorTable(BKJournalProtos.internal_static_hadoop_hdfs_VersionProto_descriptor
					, new string[] { "LayoutVersion", "NamespaceInfo" });
				BKJournalProtos.internal_static_hadoop_hdfs_EditLogLedgerProto_descriptor = BKJournalProtos
					.GetDescriptor().GetMessageTypes()[1];
				BKJournalProtos.internal_static_hadoop_hdfs_EditLogLedgerProto_fieldAccessorTable
					 = new GeneratedMessage.FieldAccessorTable(BKJournalProtos.internal_static_hadoop_hdfs_EditLogLedgerProto_descriptor
					, new string[] { "DataLayoutVersion", "LedgerId", "FirstTxId", "LastTxId" });
				BKJournalProtos.internal_static_hadoop_hdfs_MaxTxIdProto_descriptor = BKJournalProtos
					.GetDescriptor().GetMessageTypes()[2];
				BKJournalProtos.internal_static_hadoop_hdfs_MaxTxIdProto_fieldAccessorTable = new 
					GeneratedMessage.FieldAccessorTable(BKJournalProtos.internal_static_hadoop_hdfs_MaxTxIdProto_descriptor
					, new string[] { "TxId" });
				BKJournalProtos.internal_static_hadoop_hdfs_CurrentInprogressProto_descriptor = BKJournalProtos
					.GetDescriptor().GetMessageTypes()[3];
				BKJournalProtos.internal_static_hadoop_hdfs_CurrentInprogressProto_fieldAccessorTable
					 = new GeneratedMessage.FieldAccessorTable(BKJournalProtos.internal_static_hadoop_hdfs_CurrentInprogressProto_descriptor
					, new string[] { "Path", "Hostname" });
				return null;
			}
		}
		// @@protoc_insertion_point(outer_class_scope)
	}
}
