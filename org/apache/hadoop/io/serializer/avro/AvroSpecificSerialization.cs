using Sharpen;

namespace org.apache.hadoop.io.serializer.avro
{
	/// <summary>Serialization for Avro Specific classes.</summary>
	/// <remarks>
	/// Serialization for Avro Specific classes. This serialization is to be used
	/// for classes generated by Avro's 'specific' compiler.
	/// </remarks>
	public class AvroSpecificSerialization : org.apache.hadoop.io.serializer.avro.AvroSerialization
		<org.apache.avro.specific.SpecificRecord>
	{
		[org.apache.hadoop.classification.InterfaceAudience.Private]
		public override bool accept(java.lang.Class c)
		{
			return Sharpen.Runtime.getClassForType(typeof(org.apache.avro.specific.SpecificRecord
				)).isAssignableFrom(c);
		}

		[org.apache.hadoop.classification.InterfaceAudience.Private]
		public override org.apache.avro.io.DatumReader<org.apache.avro.specific.SpecificRecord
			> getReader(java.lang.Class clazz)
		{
			try
			{
				return new org.apache.avro.specific.SpecificDatumReader(clazz.newInstance().getSchema
					());
			}
			catch (System.Exception e)
			{
				throw new System.Exception(e);
			}
		}

		[org.apache.hadoop.classification.InterfaceAudience.Private]
		public override org.apache.avro.Schema getSchema(org.apache.avro.specific.SpecificRecord
			 t)
		{
			return t.getSchema();
		}

		[org.apache.hadoop.classification.InterfaceAudience.Private]
		public override org.apache.avro.io.DatumWriter<org.apache.avro.specific.SpecificRecord
			> getWriter(java.lang.Class clazz)
		{
			return new org.apache.avro.specific.SpecificDatumWriter();
		}
	}
}
